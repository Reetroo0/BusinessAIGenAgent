import requests
import certifi
import urllib3

# –û—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è SSL
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


def install_russian_cert():
    # URL —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    url = "https://gu-st.ru/content/lending/russian_trusted_root_ca_pem.crt"

    try:
        # –°–∫–∞—á–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
        print("üì• –°–∫–∞—á–∏–≤–∞—é —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç...")
        response = requests.get(url, verify=False)
        russian_cert = response.text.strip()

        print("üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞:")
        print("=" * 50)
        print(russian_cert[:200] + "..." if len(russian_cert) > 200 else russian_cert)
        print("=" * 50)

        # –ü–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ certifi
        certifi_path = certifi.where()
        print(f"üìÅ –ü—É—Ç—å –∫ certifi: {certifi_path}")

        # –î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
        with open(certifi_path, 'a', encoding='utf-8') as f:
            f.write('\n' + '# Russian Trusted Root CA\n')
            f.write(russian_cert + '\n')

        print("‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ!")

        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        import os
        file_size = os.path.getsize(certifi_path)
        print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ certifi: {file_size} –±–∞–π—Ç")

        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        with open(certifi_path, 'r', encoding='utf-8') as f:
            content = f.read()
            if 'BEGIN CERTIFICATE' in russian_cert and 'END CERTIFICATE' in russian_cert:
                print("‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
            else:
                print("‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


def test_gigachat():
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ GigaChat...")

    url = "https://ngw.devices.sberbank.ru:9443/api/v2/oauth"
    payload = {'scope': 'GIGACHAT_API_PERS'}
    headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Accept': 'application/json',
        'RqUID': 'c5036fd3-68e5-4a0a-b357-2ca9f3976628',
        'Authorization': 'Basic MDE5OTYxODItM2M4Zi03MmM0LWI3MTItNzVlZDZjODBjMWZmOjhjMzRkZGQyLThmOGQtNDA0YS1hOTg1LWE1M2Q4ZDNiZmMwYw=='
    }

    try:
        response = requests.post(url, headers=headers, data=payload, verify=True)
        print("‚úÖ –£—Å–ø–µ—Ö! SSL —Ä–∞–±–æ—Ç–∞–µ—Ç —Å verify=True")
        token = response.json()['access_token']
        print(f"üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token[:50]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å verify=True: {e}")
        print("üîÑ –ü—Ä–æ–±—É–µ–º —Å verify=False...")
        try:
            response = requests.post(url, headers=headers, data=payload, verify=False)
            token = response.json()['access_token']
            print(f"üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω (–±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ SSL): {token}...")
        except Exception as e2:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏ —Å verify=False: {e2}")


if __name__ == "__main__":
    install_russian_cert()
    test_gigachat()